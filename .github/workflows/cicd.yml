name: CI/CD

on: 
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - feature/**

jobs:
  run_tests:
    name: "Deploy to test"    
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: app
    permissions:
      pull-requests: write 
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2 
        with:
          role-to-assume: arn:aws:iam::919980474747:role/github-actions
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2 
        with: 
          terraform_version: 1.3.7
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
  
      - name: Terraform Format
        id: fmt 
        run: terraform fmt -check
  
      - name: Terraform Init - Test
        id: init_test
        run: |
          export TF_WORKSPACE=test
          terraform init
          terraform workspace list
          
      - name: Terraform Validate
        id: validate 
        run: terraform validate -no-color

      - name: Terraform Apply - Test 
        id: apply_test 
        run: |
          terraform workspace select test
          terraform apply -auto-approve -input=false 

      - name: Terraform outputs
        id: outputs
        run: terraform-bin output -json > ../tests/infrastructure/tf-outputs.json

      - name: Setup Python 3.10
        id: python_setup
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.6'
          architecture: 'x64'

      - name: Install Python dependencies
        id: python_dependencies
        working-directory: ./   
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt         

      - name: Seed the database
        id: seed_data 
        working-directory: ./
        run: python3 seed_data/load_seed_data.py seed-books.json actions-and-terraform-pipeline-test-books

      - name: Run Integration Tests
        id: integration_tests
        continue-on-error: true
        working-directory: ./
        run: |
          cat tests/infrastructure/tf-outputs.json
          pytest      

      - name: Teardown Test Environment
        id: teardown
        run: |
          terraform workspace select test
          terraform destroy -auto-approve